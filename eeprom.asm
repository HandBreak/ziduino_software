; *=============================================================================*
; * Библиотека для записи содержимого буфера данных в i2c EEPROM SDE2516	*
; * использует функции библиотеки pcf8584.asm, требует буфер данных для записи	*
; * ============================================================================*
;
; I2C_EEPROM:	equ	0a0h   - определена в PCF8584.asm
; Промежуточный буфер для формирования последовательности АДРЕС:ДАННЫЕ
PCF_WRITE_BUFF:
	defb 00h,00h		; Работает только после переноса в Shadow RAM, иначе оказывается в области R/O
; ------------------------------
;
; ==============================
; EEPROM Write block
; input:
;	A  - Длина записываемого блока (max=ffh)
;	BC - Адрес буфера данных для записи
; output:
;	none
; ------------------------------
EEPROM_WRITE:
	ld e,02h		; Количество отправляемых байт в серии
	ld d,I2C_EEPROM		; Адрес устройства  EEPROM
  EEPROM_WR_LOOP:
	push af			; Сохраняем счетчик данных
	ld hl,PCF_WRITE_BUFF + 1; Адрес буфера с данными для записи
	ld a,(bc)		; считываем байт данных
	ld (hl),a		; во второй байт буфера сохраняем записываемые данные
	dec hl			; Выбираем первый байт буфера (адресную ячеку)
	push hl
	push de
	push bc			; Сохраняем позицию буфера данных
	call PCF_MASTER_TX	; пишем
	pop bc			; Восстанавливаем позицию буфера данных
	pop de
	pop hl
	inc (hl)		; Увеличиваем адрес на 1
	inc bc			; Выбираем следующий байт данных
	pop af
	dec a			; Уменьшаем счетчик
	halt			; Подождём окончания цикла записи; 25мс
	jr nz,EEPROM_WR_LOOP	; пока не 0 повторяем цикл записи
	ret			; Выход из процедуры записи
; ------------------------------
;
; ==============================
; EEPROM Read block
; input:
;	HL - Адрес буфера данных для чтения
;	E  - Длина буфера приёма
; output:
;	none
; ------------------------------
EEPROM_READ:
	ld d,I2C_EEPROM		; Адрес устройства
	call PCF_MASTER_RX	; Читаем i2c EEPROM
	ret			; Выход из процедуры чтения
; ------------------------------

