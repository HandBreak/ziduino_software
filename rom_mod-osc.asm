; *=============================================================================*
; * Библиотека демонстрационного кода для загрузки из ROM или EEPROM		*
; * Содержит формат заголовка. Код скомпилирован для переноса и исполнения	*
; * в область памяти #C000							*
; *=============================================================================*
;

; Команда сброса
ADS_RESET_CMD:	equ 	00000110b	;(06h)
; Указатели регистров
ADS_CONV_REG:	equ	00000000b	;(00h)  16-bit MSB,LSB,RO (D15-D0)
ADS_CONF_REG:	equ	00000001b	;(01h)	16-bit,MSB,LSB,RW (OS,MUX2,MUX1,MUX0,PGA2,PGA1,PGA0,MODE,DR2,DR1,DR0,COMP_MODE,COMP_POL,COMP_LAT,COMP_QUE1,COMP_QUE0) default = 8583h
ADS_CONFIG_HI:	equ	11000100b	;(C4h)
ADS_CONFIG_LO:	equ	11100011b	;(E3h)
ADS_HITHR_REG:	equ	00000011b	;(03h)
ADS_LOTHR_REG:	equ	00000010b	;(02h)
;
	org	0bfe5h 	;(c000 - 27 байт заголовка)

;       ================================================= Заголовок ==========================================
;	     преамбула     | Назв.16 байт     |конц|Смещение |Page|Адр.размщ|Длн.блока|КОДXXXXXX|маркер нач...
	defb 0x55,0xAA,0xAA,"Oscilloscope    ",0x00,0x00,0x00,0x00,0x00,0xC0,0x7b,0x00
;	======================================================================================================
;	- Смещение: 	Указывается 00, если код идёт сразу после заголовка (при запуске из ROM), либо абсолютный адрес, если запуск
;         		осуществляется из EEPROM (при этом предварительно все заголовки копируются в буфер)
;	- Page:		Номер страницы RAM в которую должен быть загружен код. По-умолчаниюю 00h (возможно 40h,80h,c0h,00h)
;	- Адрес размещ: Адрес с которого должен быть размещён и запущен указанный код. По-умолчанию c000h
;	- Длина блока:	Размер копируемого кода. Количество байт кода, в пределах 65535
;
	; ---- ТЕСТИРУЕМ ADC1115 - ПРИМИТИВНЫЙ ОСЦИЛЛОГРАФ
; - инициализация ADC
	call PCF_INIT
	call ADS_RESET
	call ADS_SETCONFIG
; - чтение данных из ADC в буфер
screen_loop:
  	ld (ix+scan_code),00h	; Очистим буфер клавиатуры
	halt
	call CLEAR_SCREEN	; очистка экрана перед циклом отрисовки
	push hl
	call PS2CODE_CONVERT
	pop hl
	cp 76h			; "ESC" нажата ?
	ret z			; Выход из подпрограммы, если нажата
	ld a,(ix+scan_code)	; Читаем содержимое клавиатурного буфера
	cp "*"
	ret z			; Выход из подпрограммы, если нажата "*"
	ld h,0			; первый слева столбец
pixel_loop:
	ld a,(ADS_EXCHANGE_BUFF); читаем старший байт
	srl a
	srl a			; делим на 4 (0-FF -> 0-40)
	ld l,a
	neg
	add 11100000b	; (E0h)
	and 00111111b	; (3Fh)
	ld l,a			; Загружаем результат расчета
	push hl
	call PIXEL_SET
	call ADS_READDATA
	pop hl
	inc h
	ld a,h
	cp 128
	jr z,screen_loop
	jr pixel_loop
	
	
; ==============================
; ADS1115  Reset command
; Set registers to default
; input:
;	none
; output:
;	none
; ------------------------------
ADS_RESET:
	ld e,01h		; Количество отправляемых байт в серии
	ld d,I2C_ADS1115_1	; Адрес контроллера ADS1115 (Вход ADDRESS подключен к GND)
	ld hl,ADS_EXCHANGE_BUFF	; Адрес буфера для отправки данных
	ld (hl),ADS_RESET_CMD	; Команда сброса регистров ADS
	call PCF_MASTER_TX	; пишем в устройство
	ret			; Выход из процедуры записи
; ------------------------------
;
; ==============================
; ADS1115  Set user configuration
; Set registers to test mode
; input:
;	none
; output:
;	none
; ------------------------------
ADS_SETCONFIG:
	ld e,03h		; Количество отправляемых байт в серии
	ld d,I2C_ADS1115_1	; Адрес контроллера ADS1115 (Вход ADDRESS подключен к GND)
	ld hl,ADS_EXCHANGE_BUFF	; Адрес буфера для отправки данных
	ld (hl),ADS_CONF_REG	; Команда выбора конфигурационного регистра
	push hl			; Сохраним адрес начала буфера
	inc hl
	ld (hl),ADS_CONFIG_HI	; Загружаем старший байт конфигурационного регистра
	inc hl
	ld (hl),ADS_CONFIG_LO	; Загружаем младший байт конфигурационного регистра
	pop hl
	call PCF_MASTER_TX	; пишем в устройство
	ret			; Выход из процедуры записи
; ------------------------------
;
; ==============================
; ADS1115  Read AD 
; conversion data
; input:
;	none
; output:
;	none
; ------------------------------
ADS_READDATA:
	ld e,01h		; Количество отправляемых байт в серии
	ld d,I2C_ADS1115_1	; Адрес контроллера ADS1115 (Вход ADDRESS подключен к GND)
	ld hl,ADS_EXCHANGE_BUFF	; Адрес буфера для отправки данных
	ld (hl),ADS_CONV_REG	; Команда выбора регистра преобразования DC
	push hl			; Сохраним адрес начала буфера
	call PCF_MASTER_TX	; пишем в устройство
	pop hl
	ld e,02h		; Количество считываемых байт в серии
	ld d,I2C_ADS1115_1	; Адрес контроллера ADS1115 (Вход ADDRESS подключен к GND)
	call PCF_MASTER_RX	; Читаем из устройства
	ret			; Выход из процедуры записи
; ------------------------------

; Промежуточный буфер для формирования отправляемых команд
ADS_EXCHANGE_BUFF:
	defs 03,00h		; буфер размером 3 байт для записи результата преобразования и команд управления
	
	
;	defb 0x55,0xAA,0xAA,"Tester          ",0x00,0x00,0x00,0x80,0x00,0xC0,0x00,0x01
;	defb 0x55,0xAA,0xAA,"Programmator    ",0x00,0x00,0x00,0x80,0x00,0xC0,0x00,0x01
;;	defb 0x55,0xAA,0xAA,"Generator       ",0x00,0x00,0x00,0x80,0x00,0xC0,0x00,0x01
;	defb 0x55,0xAA,0xAA,"Terminator      ",0x00,0x00,0x00,0x80,0x00,0xC0,0x00,0x01
;	defb 0x55,0xAA,0xAA,"Predator        ",0x00,0x00,0x00,0x80,0x00,0xC0,0x00,0x01
;	defb 0x55,0xAA,0xAA,"Robocop         ",0x00,0x00,0x00,0x80,0x00,0xC0,0x00,0x01
;	defb 0x55,0xAA,0xAA,"Nebulus         ",0x00,0x00,0x00,0x80,0x00,0xC0,0x00,0x01
;	defb 0x55,0xAA,0xAA,"Maniac minner   ",0x00,0x00,0x00,0x80,0x00,0xC0,0x00,0x01
;	defb 0x55,0xAA,0xAA,"Batman          ",0x00,0x00,0x00,0x80,0x00,0xC0,0x00,0x01